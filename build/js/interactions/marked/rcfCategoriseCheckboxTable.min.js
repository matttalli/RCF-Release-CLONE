(window.rcfRunTime_24113=window.rcfRunTime_24113||[]).push([["interactions/marked/rcfCategoriseCheckboxTable"],{701:function(t,e,c){"use strict";c.r(e);c(25),c(6),c(11);var n=c(5),o=c.n(n),r=c(4);c(13);var i=c(515),a=c(400),s=c(344),l=c(17);function f(t){const e=Object(a.a)(t),c=Object(a.c)(e);let n=function(t){const e=Object(a.a)(t);if(!Object(a.c)(e))return 0;const c=parseInt(Object(l.a)(t,"data-restrictcount")||0);return c<1?1:c}(t);if(!c)return;c&&n<1&&(n=1);const o=Object(s.g)(t);Object(s.e)(o).length>=n?Object(s.c)(Object(s.f)(o)):Object(s.d)(o)}function u(t){return t.closest(".tableAnswerRow")}function b(t){f(u(o()(t.currentTarget)))}function d(t,e,c){const n=o()(t.currentTarget);if(e.elm!==Object(r.v)(n))return;let i=[];for(const t in e.value){const n=e.value[t];for(const t in n.value)n.value[t]===c&&i.push(n.elm)}if(i.length>0){const t=Object(s.g)(n).filter("[data-rcfid=".concat(c,"]"));for(let e=0;e<i.length;e++){const c=t.filter("[data-catid=".concat(i[e],"]"));Object(s.a)(c);f(u(c))}}}function j(t,e){if(Object(r.y)(e))throw"Empty activity passed to CategoriseCheckboxTable interaction constructor";t.$activity=e,t.$selector=e.find('.categorise[data-rcfinteraction="categorise"].checkboxTable'),Object(r.y)(t.$selector)||(function(t){const e=t.find("table");Object(r.G)(e,".tableAnswerRow:not(.example)")}(t.$selector),t.$selector.each((t,e)=>{!function(t){const e=function(t){return t.find(".tableAnswerRow:not(.example)")}(t);(function(t){return t.filter(":even")})(e).addClass("even"),function(t){return t.filter(":odd")}(e).addClass("odd")}(o()(e))}),function(t){t.on("change",".complexCategoriseCheckBox.example",i.a),t.on("change",".complexCategoriseCheckBox:not(.example)",b),t.on("rcf.single.answer",".categorise.checkboxTable",d)}(t.$activity))}c(48);function v(t){return t.find(".categoryCol")}var O=c(342);var h=c(336);var p=c(8);function g(t){return t.map((t,e)=>function(t){const e=v(t);return{elm:Object(r.v)(t)||"",type:p.a.composite,value:e.map((t,e)=>{const c=o()(e),n=Object(r.v)(c)||"";return{elm:n,type:p.a.list,value:c.closest("table").find(".tableAnswerRow").map((t,e)=>{const c=o()(e),i=Object(r.v)(c)||"",a=c.find("input[type=checkbox][data-catid=".concat(n,"]:checked:not(.example)"));return Object(r.y)(a)?void 0:i}).get()}}).get()}}(o()(e))).get()}function w(t,e,c){return(e=function(t){var e=function(t,e){if("object"!=typeof t||!t)return t;var c=t[Symbol.toPrimitive];if(void 0!==c){var n=c.call(t,e||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"==typeof e?e:e+""}(e))in t?Object.defineProperty(t,e,{value:c,enumerable:!0,configurable:!0,writable:!0}):t[e]=c,t}c.d(e,"default",(function(){return y}));class y{constructor(t){w(this,"$activity",void 0),w(this,"$selector",void 0),j(this,t)}showAnswers(t,e){!function(t,e,c){if(!e.answers)throw"Invalid answers provided to CategoriseCheckBoxTable interaction showAnswers method";const n=v(t);n.each((function(){const t=o()(this),e=Object(r.v)(t)||"";let c=[];c=t.closest("table").find("input[type=checkbox][data-catid=".concat(e,"]:checked")).map((t,e)=>Object(r.v)(o()(e))).get(),t.data("user-answer",c)}));const i=Object(s.g)(n.closest("table"));Object(s.k)(i),Object(s.d)(i);for(const n in e.answers){const i=e.answers[n],a=i.elm;if(Object(r.y)(a))continue;const l=t.filter(".categorise[data-rcfid=".concat(a,"]"));if(!Object(r.y)(l))for(const t in i.value){const e=i.value[t],n=e.elm;if(o.a.isArray(e.value)||!window.console)for(const t in e.value){const o=e.value[t],i=l.find("tr[data-rcfid=".concat(o,"]"));if(!Object(r.y)(i)){const o=i.find("input[type=checkbox][data-catid=".concat(n,"]"));Object(s.k)(o),(c&&e.verification&&"1"==e.verification[t]||Object(r.y)(c)||!c)&&Object(s.a)(o),f(i)}}else console.log("no array passed to [rcf_categorise_checkboxtable.show answers] ! - skipping")}}}(this.$selector,t,e)}showMarkedAnswers(t){!function(t,e){Object(O.a)(t);for(const c in e.answers){const n=e.answers[c],o=n.elm;if(Object(r.y)(o))continue;const i=t.filter("[data-rcfid=".concat(o,"]"));if(!Object(r.y)(i))for(const t in n.value){const e=n.value[t];for(const t in e.value){if(Object(r.y)(e.verification))continue;const c=i.find("input[type=checkbox][data-rcfid=".concat(e.value[t],"][data-catid=").concat(e.elm,"]:checked"));if(!Object(r.y)(c)){const n=e.verification&&"1"==e.verification[t]?"correct":"wrong";c.parent().find(".mark").addClass(n)}}}}}(this.$selector,t)}showUserAnswers(){!function(t){const e=t.find(".categoryCol"),c=e.closest("table"),n=Object(s.g)(c);Object(s.d)(n),Object(s.k)(n),e.each((function(){const t=o()(this),e=Object(r.v)(t)||"",c=Object(h.b)(t);if(!Object(r.y)(c)){const n=t.closest("table");for(let t=0,o=c.length;t<o;t++){const o=c[t],r=n.find("tr[data-rcfid=".concat(o,"]")),i=r.find("input[type=checkbox][data-catid=".concat(e,"]"));Object(s.a)(i),f(r)}}}))}(this.$selector)}isComplete(){return function(t){let e=!0;return t.each((t,c)=>{const n=o()(c),r=Object(s.g)(n);Object(s.e)(r).length<1&&(e=!1)}),e}(this.$activity)}getUserAnswers(){return g(this.$selector)}clearMarkedAnswers(){Object(O.a)(this.$selector)}reset(){!function(t){const e=v(t),c=e.closest("table"),n=Object(s.g)(c);Object(h.a)(e),Object(s.k)(n),Object(s.d)(n)}(this.$selector)}}}}]);
/* build created on 15/08/2025 16:19 */
//# sourceMappingURL=http://localhost:4000/source-maps/interactions/marked/rcfCategoriseCheckboxTable.js.map