(window.rcfRunTime_24113=window.rcfRunTime_24113||[]).push([["interactions/marked/rcfCategoriseCheckboxList"],{702:function(e,t,c){"use strict";c.r(t);c(25),c(6),c(11);var r=c(4),n=c(344),i=c(5),o=c.n(i);function a(e){return e.closest(".checkboxListCategoryItem")}var s=c(400);function u(e){const t=Object(s.a)(e),c=Object(s.c)(t);let r=function(e){const t=Object(s.a)(e);if(!Object(s.c)(t))return 0;const c=parseInt(e.attr("data-restrictcount")||0);return c<1?1:c}(e);if(!c)return;c&&r<1&&(r=1);const i=Object(n.g)(e);Object(n.e)(i).length>=r?Object(n.c)(Object(n.f)(i)):Object(n.d)(i)}function f(e,t,c){var i=o()(e.currentTarget);if(t.elm===Object(r.v)(i)){var s,f=function(e,t){var c=[];for(var r in e.value){var n=e.value[r];for(var i in n.value)n.value[i]===t&&c.push(n.elm)}return c}(t,c);if(f.length>0)for(var l=0;l<f.length;l++){var b=i.find("input[type=checkbox][data-rcfid=".concat(c,"][value=").concat(f[l],"]"));s=a(b),Object(n.a)(b),u(s)}}}function l(e){u(a(o()(e.currentTarget)))}function b(e,t){if(Object(r.y)(t))throw"Empty Activity passed to CategoriseCheckboxList interaction constructor";var c;(e.$activity=t,e.$selector=t.find(".categorise.complexCategorise.checkboxList[data-rcfinteraction=categorise]"),Object(r.y)(e.$selector))||(Object(n.i)(e.$selector),function(e){e.on("change","input.complexCategoriseCheckBox",l),e.on("rcf.single.answer",".categorise.checkboxList",f)}(e.$activity),c=e.$selector,Object(r.G)(c,".checkboxListCategoryItem"))}c(13);var v=c(336);c(15),c(16);var h=c(342),j=c(407),O=c(340);function d(e){const t=e.$interaction||o()([]);e.value.forEach(e=>function(e,t){const c=t.elm;(Array.isArray(t.value)?t.value:[t.value]).forEach((n,i)=>{const o=e.find("input[type='checkbox'][data-rcfid='".concat(n,"'][value='").concat(c,"']:checked"));if(!Object(r.y)(o)){const e=o.closest(".dev-markable-container"),c=!!t.verification&&"1"==t.verification[i];Object(O.a)(e,c)}})}(t,e))}c(48);var g=c(8);function p(e){return e.map((e,t)=>{return c=o()(t),{elm:Object(r.v)(c)||"",type:g.a.composite,value:c.find(".checkboxListCategoryItem:first input[type=checkbox]").map((function(){var e=this.value;return{elm:e,type:g.a.list,value:c.find('input[type=checkbox][value="'+e+'"]:not(.example):checked').map((function(){return Object(r.v)(o()(this))})).get()}})).get()};var c}).get()}function y(e,t,c){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var c=e[Symbol.toPrimitive];if(void 0!==c){var r=c.call(e,t||"default");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:c,enumerable:!0,configurable:!0,writable:!0}):e[t]=c,e}c.d(t,"default",(function(){return m}));class m{constructor(e){y(this,"$activity",void 0),y(this,"$selector",void 0),b(this,e)}showAnswers(e,t){!function(e,t,c){if(!t.answers)throw"Invalid answers provided to CategoriseCheckboxList interaction showAnswers method";for(var i in Object(v.c)(e),t.answers){const v=t.answers[i],O=v.elm;if(Object(r.y)(O))continue;const d=e.filter(".categorise[data-rcfid=".concat(O,"]"));if(Object(r.y)(d))continue;const g=Object(n.g)(d);for(var s in Object(n.d)(g),v.value){var f=v.value[s],l=f.elm;if(o.a.isArray(f.value)||!window.console)for(var b in f.value){var h=f.value[b],j=d.find("input[type=checkbox][data-rcfid=".concat(h,"][value=").concat(l,"]"));if(!Object(r.y)(j))!c||f.verification&&"1"==f.verification[b]?Object(n.a)(j):Object(n.k)(j),u(a(j))}else console.log("no array passed to [rcf_categorise_checkboxlist.show answers] ! - skipping")}}}(this.$selector,e,t)}showMarkedAnswers(e){!function(e,t){Object(h.a)(e),Object(j.a)(e,t).forEach(e=>d(e))}(this.$selector,e)}showUserAnswers(){!function(e){const t=Object(n.g)(e);Object(n.k)(t),Object(n.d)(t),t.each((e,t)=>{const c=o()(t),i=Object(v.b)(c);Object(r.y)(i)||Object(n.a)(c),u(a(c))})}(this.$selector)}isComplete(){return function(e){let t=!0;return e.each((e,c)=>{const r=o()(c);Object(n.e)(Object(n.g)(r)).length<1&&(t=!1)}),t}(this.$activity)}getUserAnswers(){return p(this.$selector)}clearMarkedAnswers(){Object(h.a)(this.$selector)}reset(){!function(e){const t=Object(n.g)(e);Object(v.a)(t),Object(n.d)(t),Object(n.k)(t)}(this.$selector)}}}}]);
/* build created on 15/08/2025 16:19 */
//# sourceMappingURL=http://localhost:4000/source-maps/interactions/marked/rcfCategoriseCheckboxList.js.map